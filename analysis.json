{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "A list of requests related to a project in the ARC main menu.\n\nThe element requires the `arc-models/project-model` element to be present\nin the DOM to update requests order.\n\n### Example\n\n```\n<projects-menu-requests\n project-id=\"some-id\"\n selected-request=\"id-of-selected\"></projects-menu-requests>\n```\n\n### Styling\n`<saved-menu>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--projects-menu-requests` | Mixin applied to the element | `{}`\n`--projects-menu-requests-background-color` | Background color of the menu | `#f7f7f7`\n`--projects-menu-requests-selected-method-label-background-color` | Background color of the POST method label when the item is focused | `#fff`\n`--projects-menu-requests-list-item` | Mixin applied to each list item | `{}`\n`--projects-menu-requests-selected-item-background-color` | Background color of the selected list item | `#FF9800`\n`--projects-menu-requests-selected-item-color` | Color of the selected list item | `#fff`\n`--projects-menu-requests-name-label` | Mixin applied to the name label | `{}`\n`--warning-primary-color` | Main color of the warning messages | `#FF7043`\n`--warning-contrast-color` | Contrast color for the warning color | `#fff`\n`--error-toast` | Mixin applied to the error toast | `{}`",
      "summary": "",
      "path": "projects-menu-requests.html",
      "properties": [
        {
          "name": "requests",
          "type": "Array.<Object>",
          "description": "The list of request to render.\nIt can be eirther saved, history or project items.",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 44,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "hasRequests",
          "type": "boolean | null | undefined",
          "description": "Computed value, true when the project has requests.",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "type",
          "type": "string | null | undefined",
          "description": "Requests list type. Can be one of:\n- saved\n- history\n- project\n\nDepending on the the type request change event is handled differently.\nFor saved and history requests corresponding type is processed.\nFor project requests list only request that has project id in the\nprojects list is processed.\n\nThis property must be set.",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 67,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "projectId",
          "type": "string | null | undefined",
          "description": "Project datastore ID to display.\nThis should be set only when type is `project`",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 72,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "listType",
          "type": "string | null | undefined",
          "description": "Changes information density of list items.\nBy default it uses material's peper item with two lines (72px heigth)\nPossible values are:\n\n- `default` or empty - regular list view\n- `comfortable` - enables MD single line list item vie (52px heigth)\n- `compact` - enables list that has 40px heigth (touch recommended)",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 82,
              "column": 8
            },
            "end": {
              "line": 86,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateListStyles\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_hasTwoLines",
          "type": "boolean | null | undefined",
          "description": "Computed value if the list item should be consisted of two lines of\ndescription.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 91,
              "column": 8
            },
            "end": {
              "line": 91,
              "column": 93
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "project",
          "type": "Object | null | undefined",
          "description": "A project object associated with requests.\nThis is only valid when `type` is set to `project`. It is set automatically\nwhen `readProjectRequests()` is called.",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 97,
              "column": 8
            },
            "end": {
              "line": 97,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "querying",
          "type": "boolean | null | undefined",
          "description": "True if the element currently is querying the datastore for the data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 47
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "dataUnavailable",
          "type": "boolean | null | undefined",
          "description": "Computed value. True if query ended and there's no results.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 8
            },
            "end": {
              "line": 150,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_isAttached",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "draggableEnabled",
          "type": "boolean | null | undefined",
          "description": "Enables the comonent to accept drop action with a request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 8
            },
            "end": {
              "line": 155,
              "column": 86
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_draggableChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dispatch",
          "description": "Dispatches bubbling and composed custom event.\nBy default the event is cancelable until `cancelable` property is set to false.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Event type"
            },
            {
              "name": "detail",
              "type": "?any",
              "description": "A detail to set"
            },
            {
              "name": "cancelable",
              "type": "?Boolean",
              "description": "True if the event is cancelable (default value)."
            }
          ],
          "return": {
            "type": "CustomEvent"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_requestDeletedHandler",
          "description": "Handler for `request-object-deleted` event. Removes request from the list\nif it existed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 161,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_itemDeleted",
          "description": "Removes an item from the list by given id.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 166,
              "column": 4
            },
            "end": {
              "line": 174,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "Request ID to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_historyItemDeleted",
          "description": "Removes a history item from the list by given id.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 194,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "Request ID to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_requestChangedHandler",
          "description": "Handler for `request-object-changed` custom event.\nDepending on the `type` property it updates / adds / removes item from\nthe requests list.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 201,
              "column": 4
            },
            "end": {
              "line": 219,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_projectTypeChanged",
          "description": "Handles request change when type is project.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 254,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "Changed request object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_isProjectRequest",
          "description": "Checks if requests is related to current project.\n`projectId` has to be set on the element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 272,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_savedTypeChanged",
          "description": "Handles request change when type is saved or history.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 277,
              "column": 4
            },
            "end": {
              "line": 297,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "Changed request object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchProjectRead",
          "description": "Dispatches `project-read` custom event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 303,
              "column": 4
            },
            "end": {
              "line": 307,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "Project ID to read"
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Disaptched custom event"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchProjectList",
          "description": "Dispatches `request-project-list` custom event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 313,
              "column": 4
            },
            "end": {
              "line": 317,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "Project ID"
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Disaptched custom event"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchRequestChanged",
          "description": "Dispatches `request-object-changed` custom event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 325,
              "column": 4
            },
            "end": {
              "line": 330,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Request type, `saved` or `history`."
            },
            {
              "name": "request",
              "type": "Object",
              "description": "Updated request to store."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Disaptched custom event"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "readProjectRequests",
          "description": "A function to read request data for a project.",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 336,
              "column": 4
            },
            "end": {
              "line": 369,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "projectId",
              "type": "String",
              "description": "Project ID"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "Promise.resolved to requests list."
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_legacySort",
          "description": "Sorts requests list by `projectOrder` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 378,
              "column": 4
            },
            "end": {
              "line": 392,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "Object"
            },
            {
              "name": "b",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Number"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_updateBulk",
          "description": "Updates requests in bulk opeartion.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 399,
              "column": 4
            },
            "end": {
              "line": 402,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "[type]",
              "description": "[description]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[description]"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_updateRequest",
          "description": "Sends the `request-object-changed` custom event for each request on the list.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 408,
              "column": 4
            },
            "end": {
              "line": 425,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "Request object."
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "Promise resolved when the request object is updated."
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_computeHasRequests",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 427,
              "column": 4
            },
            "end": {
              "line": 429,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "length"
            }
          ],
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_computeHasTwoLines",
          "description": "Computes value for `_hasTwoLines` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 435,
              "column": 4
            },
            "end": {
              "line": 440,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "listType",
              "type": "?String",
              "description": "Selected list type."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_updateListStyles",
          "description": "Updates icon size CSS variable and notifies resize on the list when\nlist type changes.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 446,
              "column": 4
            },
            "end": {
              "line": 454,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "?String"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_applyListStyles",
          "description": "Applies `--paper-item-icon-width` variable.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 460,
              "column": 4
            },
            "end": {
              "line": 473,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "size",
              "type": "Number",
              "description": "Icon width in pixels."
            },
            {
              "name": "target",
              "type": "?Element",
              "description": "The target to apply styling. Default to this."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_persistRequestsOrder",
          "description": "Stores current order of requests in the project.\nThis shouls be only called wshen `project` property is set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 479,
              "column": 4
            },
            "end": {
              "line": 492,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_idsArrayEqual",
          "description": "Tests if two arrays has the same order of ids (strings).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 499,
              "column": 4
            },
            "end": {
              "line": 515,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a1",
              "type": "Array.<String>",
              "description": "Array a"
            },
            {
              "name": "a2",
              "type": "Array.<String>",
              "description": "Array b"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True when elements are ordered the same way."
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchProjectUpdate",
          "description": "Dispatches `project-object-changed` event to inform model to update\nthe data.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 523,
              "column": 4
            },
            "end": {
              "line": 531,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project",
              "type": "Object",
              "description": "Data to store."
            }
          ],
          "return": {
            "type": "Promise"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_projectChanged",
          "description": "Handler for the `project-object-changed` event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 538,
              "column": 4
            },
            "end": {
              "line": 550,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "False if the event was not handled."
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_updateProjectOrder",
          "description": "Updates requests order when project changed.\nIt reorder requests array for changed project order. It won't change\nrequests array when order is the same. It also won't change order when\nrequest list is different that project's requests list.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 559,
              "column": 4
            },
            "end": {
              "line": 586,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project",
              "type": "Object",
              "description": "Changed project"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True when order has changed"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchExportData",
          "description": "Dispatches `export-data` event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 593,
              "column": 4
            },
            "end": {
              "line": 609,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requests",
              "type": "Array.<Object>",
              "description": "List of request to export."
            },
            {
              "name": "opts",
              "type": "Object"
            }
          ],
          "return": {
            "type": "CustomEvent"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_openRequest",
          "description": "Dispatches navigate event to open a request",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 615,
              "column": 4
            },
            "end": {
              "line": 626,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "[type]",
              "description": "[description]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[description]"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_validateType",
          "description": "Throws an error when type is not set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 631,
              "column": 4
            },
            "end": {
              "line": 635,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Passed to the function type"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_draggableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 193,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addDndEvents",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 203,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeDndEvents",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 4
            },
            "end": {
              "line": 213,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_queryData",
          "description": "Queries for the data when state or `projectId` changes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 4
            },
            "end": {
              "line": 238,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "projectId",
              "type": "String"
            },
            {
              "name": "isAttached",
              "type": "Boolean",
              "description": "Current valiue of `_isAttached`"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeDataUnavailable",
          "description": "Computes value for the `dataUnavailable` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 4
            },
            "end": {
              "line": 247,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasRequests",
              "type": "Boolean"
            },
            {
              "name": "querying",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_openHandler",
          "description": "Called when the user clicks on an item in the UI",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeDropPointer",
          "description": "Removes drop pointer from shadow root.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 260,
              "column": 4
            },
            "end": {
              "line": 266,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createDropPointer",
          "description": "Removes drop pointer to shadow root.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 4
            },
            "end": {
              "line": 290,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ref",
              "type": "Element",
              "description": "A list item to be used as a reference point."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dragoverHandler",
          "description": "Handler for `dragover` event on this element. If the dagged item is compatible\nit renders drop message.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 4
            },
            "end": {
              "line": 319,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeDropEffect",
          "description": "Computes value fro `dropEffect` property of the `DragEvent`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 325,
              "column": 4
            },
            "end": {
              "line": 339,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Either `copy` or `move`."
          }
        },
        {
          "name": "_dragleaveHandler",
          "description": "Handler for `dragleave` event on this element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 344,
              "column": 4
            },
            "end": {
              "line": 354,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dropHandler",
          "description": "Handler for `drag` event on this element. If the dagged item is compatible\nit adds request to saved requests.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 4
            },
            "end": {
              "line": 396,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleMoveDrop",
          "description": "Handles logic when drop event is `move` in effect.\nRemoves reference to old project (if exists). It uses `arc-source/project-detail`\ndata from event which should hold project ID.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 405,
              "column": 4
            },
            "end": {
              "line": 421,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            },
            {
              "name": "request",
              "type": "Object",
              "description": "Request object"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if the request object changed."
          }
        },
        {
          "name": "_insertRequestAt",
          "description": "Updates project and request objects and inserts the request at a position.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 4
            },
            "end": {
              "line": 471,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index",
              "type": "Number",
              "description": "The position in requests order"
            },
            {
              "name": "request",
              "type": "Object",
              "description": "Request to update"
            },
            {
              "name": "forceRequestUpdate",
              "type": "Boolean",
              "description": "Forces update on request object even\nwhen position hasn't change."
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_dispatchProjectChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 473,
              "column": 4
            },
            "end": {
              "line": 477,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project"
            }
          ]
        },
        {
          "name": "_dragStart",
          "description": "Handler for the `dragstart` event added to the list item when `draggableEnabled`\nis set to true.\nThis function sets request data on the `dataTransfer` object with `arc/request-object`\nmime type. The request data is a serialized JSON with request model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 486,
              "column": 4
            },
            "end": {
              "line": 497,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeDraggableValue",
          "description": "Computes value for the `draggable` property of the list item.\nWhen `draggableEnabled` is set it returns true which is one of the\nconditions to enable drag and drop on an element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 505,
              "column": 4
            },
            "end": {
              "line": 507,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "draggableEnabled",
              "type": "Boolean",
              "description": "Current value of `draggableEnabled`"
            }
          ],
          "return": {
            "type": "String",
            "desc": "`true` or `false` (as string) depending on the argument."
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 135,
          "column": 2
        },
        "end": {
          "line": 508,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.ProjectsMenuRequests",
      "attributes": [
        {
          "name": "requests",
          "description": "The list of request to render.\nIt can be eirther saved, history or project items.",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 44,
              "column": 23
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "has-requests",
          "description": "Computed value, true when the project has requests.",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "type",
          "description": "Requests list type. Can be one of:\n- saved\n- history\n- project\n\nDepending on the the type request change event is handled differently.\nFor saved and history requests corresponding type is processed.\nFor project requests list only request that has project id in the\nprojects list is processed.\n\nThis property must be set.",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 67,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "project-id",
          "description": "Project datastore ID to display.\nThis should be set only when type is `project`",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 72,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "list-type",
          "description": "Changes information density of list items.\nBy default it uses material's peper item with two lines (72px heigth)\nPossible values are:\n\n- `default` or empty - regular list view\n- `comfortable` - enables MD single line list item vie (52px heigth)\n- `compact` - enables list that has 40px heigth (touch recommended)",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 82,
              "column": 8
            },
            "end": {
              "line": 86,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "project",
          "description": "A project object associated with requests.\nThis is only valid when `type` is set to `project`. It is set automatically\nwhen `readProjectRequests()` is called.",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 97,
              "column": 8
            },
            "end": {
              "line": 97,
              "column": 23
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "querying",
          "description": "True if the element currently is querying the datastore for the data",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 47
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "data-unavailable",
          "description": "Computed value. True if query ended and there's no results.",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 8
            },
            "end": {
              "line": 150,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "draggable-enabled",
          "description": "Enables the comonent to accept drop action with a request.",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 8
            },
            "end": {
              "line": 155,
              "column": 86
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "querying-changed",
          "description": "Fired when the `querying` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "data-unavailable-changed",
          "description": "Fired when the `dataUnavailable` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "projects-menu-requests",
      "mixins": [
        "ArcComponents.RequestsListMixin"
      ]
    },
    {
      "description": "A list of projects in the ARC main menu.\n\nThe element uses direct implementation of the PouchDB to make a query to the\ndatastore. It also listens to events fired by the `arc-model` elements to\nupdate state of the saved items.\n\n### Example\n\n```html\n<projects-menu\n selected-project=\"project-id\"\n selected-request=\"id-of-selected-request\"></projects-menu>\n```\n### Styling\n`<saved-menu>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--projects-menu` | Mixin applied to the element | `{}`\n`--projects-menu-background-color` | Background color of the menu | `#f7f7f7`\n`--projects-menu-selected-method-label-background-color` | Background color of the POST method label when the item is focused | `#fff`\n`--projects-menu-list` | Mixin applied to the list element. | `{}`\n`--projects-menu-list-item` | Mixin applied to each list item | `{}`\n`--projects-menu-selected-item-background-color` | Background color of the selected list item | `rgba(255, 152, 0, 0.24)`\n`--projects-menu-name-label` | Mixin applied to the name label | `{}`\n`--projects-menu-project-icon-color` | Color of the \"project\" icon | `rgba(0, 0, 0, 0.64)`\n`--projects-menu-selected-project-icon-color` | Color of the \"project\" icon when selected | `#F57C00`\n`--arc-menu-empty-info-color` | Color applied to the empty info section | ``\n`--arc-menu-empty-info-title-color` | Color applied to the title in the empty info section | ``\n`--projects-menu-open-icon-color` | Color of the open project icon | `{}`\n`--context-menu-item-color` | Color of the context menu item | ``\n`--context-menu-item-background-color` | Background color of the context menu item | ``\n`--context-menu-item-color-hover` | Color of the context menu item when hovered | ``\n`--context-menu-item-background-color-hover` | Background color of the context menu item when hovered | ``",
      "summary": "",
      "path": "projects-menu.html",
      "properties": [
        {
          "name": "projects",
          "type": "Array | null | undefined",
          "description": "List of available projects.",
          "privacy": "public",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 44,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "hasProjects",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if any project is on the list.",
          "privacy": "public",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "noAutoProjects",
          "type": "boolean | null | undefined",
          "description": "When set the element won't request projects list when attached to the dom.\nWhen set `refreshProjects()` has to be called manually.",
          "privacy": "public",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 58,
              "column": 8
            },
            "end": {
              "line": 58,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "dataUnavailable",
          "type": "boolean | null | undefined",
          "description": "Computed value. True if query ended and there's no results.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 8
            },
            "end": {
              "line": 231,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "listType",
          "type": "string | null | undefined",
          "description": "Changes information density of list items.\nBy default it uses material's peper item with two lines (72px heigth)\nPossible values are:\n\n- `default` or empty - regular list view\n- `comfortable` - enables MD single line list item vie (52px heigth)\n- `compact` - enables list that has 40px heigth (touch recommended)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 8
            },
            "end": {
              "line": 245,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateListStyles\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "draggableEnabled",
          "type": "boolean | null | undefined",
          "description": "Enables the comonent to accept drop action with a request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 8
            },
            "end": {
              "line": 249,
              "column": 55
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "dragOpenTimeout",
          "type": "number | null | undefined",
          "description": "A timeout after which the project item is opened when dragging a\nrequest over.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 254,
              "column": 51
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "700"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "_computeHasProjects",
          "description": "Computes value for `hasProjects` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record",
              "type": "Object",
              "description": "Polymer change record"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "_projectDataImportHandler",
          "description": "Refreshes projects list when ARC data were imported.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "_projectDatabaseDestroyedHandler",
          "description": "Handler for `datastore-destroyed` custom event.\nRefreshes list of projects afyter clearing the data.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 111,
              "column": 4
            },
            "end": {
              "line": 125,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "refreshProjects",
          "description": "Refreshes the list of projects after next render frame.",
          "privacy": "public",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "_projectChangedHandler",
          "description": "Handler for non-cancelable `project-object-changed` event.\nUpdates the project on projects list or adds it if it's new project.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 144,
              "column": 4
            },
            "end": {
              "line": 165,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "_projectDeletedHandler",
          "description": "Handler for `project-object-deleted` custom event.\nRemoves a project from the list if applicable.\nThis will not handle cancelable events.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 172,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "_dispatchProjectQueryEvent",
          "description": "Dispatches `project-model-query` custom event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 192,
              "column": 4
            },
            "end": {
              "line": 201,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "CustomEvent"
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "_updateProjectsList",
          "description": "Updates list of available projects after the overlay is opened.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 223,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "_projectsSortFn",
          "description": "Sort function used to sort projects in order.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 230,
              "column": 4
            },
            "end": {
              "line": 240,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "Object"
            },
            {
              "name": "b",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Number"
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "_computeProjectsAutocomplete",
          "description": "Computes a list of suggestion for autocomplete element.\nFrom the list of `projects` it takes names for each project and returns\nnew list for suggestions.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 248,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "projects",
              "type": "Array.<Object>"
            }
          ],
          "return": {
            "type": "Array.<String>"
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "_handleProjectsError",
          "description": "Handles errors.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 269,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cause",
              "type": "Error",
              "description": "Error object"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "_processSelectedProjectsInfo",
          "description": "Processes projects name list and returns object with\n`add` property as a list of project names that do not yet exists and\n`existing` property with a list of IDs of existing projects.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 292,
              "column": 4
            },
            "end": {
              "line": 321,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedProjects",
              "type": "Array.<String>",
              "description": "List of selected projects to process."
            }
          ],
          "return": {
            "type": "Object",
            "desc": "`add` {Array<String>} List of names of a projects to create\n- `existing` {Array<String>} List of IDs of existing projects"
          },
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "_computeDataUnavailable",
          "description": "Computes value for the `dataUnavailable` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 4
            },
            "end": {
              "line": 271,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasProjects",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeA11yCommand",
          "description": "Computes command label depending on a OS.\nFor Mac it will be cmd + `key` and for the rest of the World it\nwill be ctrl + `key`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 4
            },
            "end": {
              "line": 294,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "key",
              "type": "String",
              "description": "The key combination as a sufix after the command key"
            },
            {
              "name": "platform",
              "type": "?String",
              "description": "Current platform name. `navigator.platform` is used by default."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Full command to display in command label."
          }
        },
        {
          "name": "_toggleOpen",
          "description": "Toggles opened project details.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 4
            },
            "end": {
              "line": 314,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateListStyles",
          "description": "Updates icon size CSS variable and notifies resize on the list when\nlist type changes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 335,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "?String"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_cancelEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 4
            },
            "end": {
              "line": 341,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_moreClickHandler",
          "description": "Cancels click event when \"more\" button is clicked.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 346,
              "column": 4
            },
            "end": {
              "line": 348,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deselectMenuOption",
          "description": "Closes paper-listbox holding menu items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 4
            },
            "end": {
              "line": 356,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openAllRequests",
          "description": "Handler for the click event \"open all\" menu item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 361,
              "column": 4
            },
            "end": {
              "line": 366,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_replaceAllRequests",
          "description": "Handler for the click event \"replace all\" menu item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 371,
              "column": 4
            },
            "end": {
              "line": 376,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dispatchOpenRequests",
          "description": "Dispatches `workspace-open-project-requests` event end returns it.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 4
            },
            "end": {
              "line": 388,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project",
              "type": "Object",
              "description": "Project object"
            },
            {
              "name": "replace",
              "type": "?Boolean",
              "description": "When true the requests are to be replaced in the workspace."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_openProject",
          "description": "Handler for the click event \"details\" menu item.\nDispatches \"navigate\" event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 394,
              "column": 4
            },
            "end": {
              "line": 403,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_stopEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 405,
              "column": 4
            },
            "end": {
              "line": 407,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dragoverHandler",
          "description": "Handler for `dragover` event on this element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 412,
              "column": 4
            },
            "end": {
              "line": 429,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeDropEffect",
          "description": "Computes value for `dropEffect` property of the `DragEvent`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 435,
              "column": 4
            },
            "end": {
              "line": 448,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Either `copy` or `move`."
          }
        },
        {
          "name": "_dragleaveHandler",
          "description": "Handler for `dragleave` event on project node.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 453,
              "column": 4
            },
            "end": {
              "line": 466,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dropHandler",
          "description": "Handler for `drag` event on this element. If the dagged item is compatible\nit adds request to the project",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 472,
              "column": 4
            },
            "end": {
              "line": 491,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_cancelDragTimeout",
          "description": "Cancels the timer set in the dragover event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 495,
              "column": 4
            },
            "end": {
              "line": 500,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openProjectDragOver",
          "description": "Opens the project from the draggable event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 504,
              "column": 4
            },
            "end": {
              "line": 513,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_appendRequest",
          "description": "Adds dropped request to a project.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 520,
              "column": 4
            },
            "end": {
              "line": 560,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project",
              "type": "Object",
              "description": "Project model"
            },
            {
              "name": "request",
              "type": "Object",
              "description": "Request model"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_dispatchProjectChanged",
          "description": "Dispatches `project-object-changed` custom event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 566,
              "column": 4
            },
            "end": {
              "line": 570,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project",
              "type": "Object",
              "description": "Updated project to store."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Disaptched custom event"
          }
        },
        {
          "name": "_dispatchProcessError",
          "description": "Dispatches `process-error` so the application can notify user about the event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 576,
              "column": 4
            },
            "end": {
              "line": 582,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cause",
              "type": "Error",
              "description": "Error object"
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Disaptched custom event"
          }
        },
        {
          "name": "_dispatch",
          "description": "Dispatches bubbling and composed custom event.\nBy default the event is cancelable until `cancelable` property is set to false.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 591,
              "column": 4
            },
            "end": {
              "line": 603,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Event type"
            },
            {
              "name": "detail",
              "type": "?any",
              "description": "A detail to set"
            },
            {
              "name": "cancelable",
              "type": "?Boolean",
              "description": "True if the event is cancelable (default value)."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_dragStart",
          "description": "Handler for the `dragstart` event added to the list item when `draggableEnabled`\nis set to true.\nThis function sets request data on the `dataTransfer` object with `arc/request-object`\nmime type. The request data is a serialized JSON with request model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 611,
              "column": 4
            },
            "end": {
              "line": 621,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeDraggableValue",
          "description": "Computes value for the `draggable` property of the list item.\nWhen `draggableEnabled` is set it returns true which is one of the\nconditions to enable drag and drop on an element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 629,
              "column": 4
            },
            "end": {
              "line": 631,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "draggableEnabled",
              "type": "Boolean",
              "description": "Current value of `draggableEnabled`"
            }
          ],
          "return": {
            "type": "String",
            "desc": "`true` or `false` (as string) depending on the argument."
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 218,
          "column": 2
        },
        "end": {
          "line": 632,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.ProjectsMenu",
      "attributes": [
        {
          "name": "projects",
          "description": "List of available projects.",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 44,
              "column": 23
            }
          },
          "metadata": {},
          "type": "Array | null | undefined",
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "has-projects",
          "description": "Computed value, true if any project is on the list.",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "no-auto-projects",
          "description": "When set the element won't request projects list when attached to the dom.\nWhen set `refreshProjects()` has to be called manually.",
          "sourceRange": {
            "file": "../projects-list-consumer-mixin/projects-list-consumer-mixin.html",
            "start": {
              "line": 58,
              "column": 8
            },
            "end": {
              "line": 58,
              "column": 31
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.ProjectsListConsumerMixin"
        },
        {
          "name": "data-unavailable",
          "description": "Computed value. True if query ended and there's no results.",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 8
            },
            "end": {
              "line": 231,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "list-type",
          "description": "Changes information density of list items.\nBy default it uses material's peper item with two lines (72px heigth)\nPossible values are:\n\n- `default` or empty - regular list view\n- `comfortable` - enables MD single line list item vie (52px heigth)\n- `compact` - enables list that has 40px heigth (touch recommended)",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 8
            },
            "end": {
              "line": 245,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "draggable-enabled",
          "description": "Enables the comonent to accept drop action with a request.",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 8
            },
            "end": {
              "line": 249,
              "column": 55
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "drag-open-timeout",
          "description": "A timeout after which the project item is opened when dragging a\nrequest over.",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 254,
              "column": 51
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "projects-menu",
      "mixins": [
        "ArcComponents.ProjectsListConsumerMixin"
      ]
    }
  ]
}
