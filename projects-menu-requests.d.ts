/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   projects-menu-requests.html
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../http-method-label/http-method-label.d.ts" />
/// <reference path="../dom-reorderer/dom-reorderer.d.ts" />
/// <reference path="../paper-toast/paper-toast.d.ts" />
/// <reference path="../paper-progress/paper-progress.d.ts" />
/// <reference path="../paper-item/paper-icon-item.d.ts" />
/// <reference path="../paper-item/paper-item-body.d.ts" />
/// <reference path="../paper-ripple/paper-ripple.d.ts" />
/// <reference path="../requests-list-mixin/requests-list-mixin.d.ts" />
/// <reference path="../requests-list-mixin/requests-list-styles.d.ts" />

declare namespace UiElements {

  /**
   * A list of requests related to a project in the ARC main menu.
   *
   * The element requires the `arc-models/project-model` element to be present
   * in the DOM to update requests order.
   *
   * ### Example
   *
   * ```
   * <projects-menu-requests
   *  project-id="some-id"
   *  selected-request="id-of-selected"></projects-menu-requests>
   * ```
   *
   * ### Styling
   * `<saved-menu>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--projects-menu-requests` | Mixin applied to the element | `{}`
   * `--projects-menu-requests-background-color` | Background color of the menu | `#f7f7f7`
   * `--projects-menu-requests-selected-method-label-background-color` | Background color of the POST method label when the item is focused | `#fff`
   * `--projects-menu-requests-list-item` | Mixin applied to each list item | `{}`
   * `--projects-menu-requests-selected-item-background-color` | Background color of the selected list item | `#FF9800`
   * `--projects-menu-requests-selected-item-color` | Color of the selected list item | `#fff`
   * `--projects-menu-requests-name-label` | Mixin applied to the name label | `{}`
   * `--warning-primary-color` | Main color of the warning messages | `#FF7043`
   * `--warning-contrast-color` | Contrast color for the warning color | `#fff`
   * `--error-toast` | Mixin applied to the error toast | `{}`
   */
  class ProjectsMenuRequests extends
    ArcComponents.RequestsListMixin(
    Object) {

    /**
     * ID of the project.
     */
    projectId: string|null|undefined;

    /**
     * True if the element currently is querying the datastore for the data
     */
    querying: boolean|null|undefined;

    /**
     * Computed value. True if query ended and there's no results.
     */
    readonly dataUnavailable: boolean|null|undefined;
    _isAttached: boolean|null|undefined;
    connectedCallback(): void;
    disconnectedCallback(): void;

    /**
     * Queries for the data when state or `projectId` changes
     *
     * @param isAttached Current valiue of `_isAttached`
     */
    _queryData(projectId: String|null, isAttached: Boolean|null): void;

    /**
     * Computes value for the `dataUnavailable` property.
     */
    _computeDataUnavailable(hasRequests: Boolean|null, querying: Boolean|null): Boolean|null;

    /**
     * Called when the user clicks on an item in the UI
     */
    _openRequest(e: ClickEvent|null): void;

    /**
     * Handler for the list reorder event. Updates requests order in the
     * datastore.
     */
    _onReorder(): void;
  }
}

interface HTMLElementTagNameMap {
  "projects-menu-requests": UiElements.ProjectsMenuRequests;
}
